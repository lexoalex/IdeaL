<?php 
/**
 *  Implementation of hook_init().
 */
function ideal_init() {
//  $version = variable_get('content_schema_version');
//  dpm($version);
//  content_instance_tablename('6009');
}
/**
 *  Implementation of hook_menu().
 */
function ideal_menu() {
  $items = array();
  $items['home'] = array(
    'title'             => '',
    'page callback'     => 'ideal_theme_pages',
    'page arguments'    => array('ideal_home_page'),
    'access arguments'  => array('access content'),
    'type'              => MENU_CALLBACK,
  );
  return $items;
}

/**
 * ideal_theme_pages callback
 */
function ideal_theme_pages($key) {
  return theme($key);
}

/**
 * Implementation of hook_nodeapi().
 */
function ideal_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  switch ($op) {
    case 'presave':
      // TODO:  Move this to rules module/
      if ($node->type == 'idea') {
        //if it's have tags 'Under Review' or 'Launched'.
        if ($node->field_in_action[0] == 81 || $node->field_in_action[0] == 79) {
          $sql = "SELECT cid, uid FROM {comments} WHERE nid=%d";
          $resource = db_query($sql, $node->nid);
          //Go over the comment authors/
          while($row = db_fetch_array( $resource )) {
            $comment_author = $row['uid'];
            //if the tag is 'Under Review' Add 1 point to author of comment/
            if ($node->field_in_action[0] == 81) {
              $params = array (
              	'uid' => $comment_author,
          			'points' => 1,
              );
            }
            //if the tag is 'Launched' Add 2 points to athour of comment
            if ($node->field_in_action[0] == 79) {
              $params = array (
              	'uid' => $comment_author,
          			'points' => 2,
              );
            }
            userpoints_userpointsapi($params); 
          }
        }   
      }  
  break;
  };
}

/**
 * Implementation of hook_theme()
 */
function ideal_theme($existing, $type, $theme, $path) {
  return array(
    //create a template for home page.
    'ideal_home_page' => array(
      'arguments' => array('titles' => NULL),
      'template' => 'home-page',
      'path' => drupal_get_path('module', 'ideal'),
    ),
    //Override filter.module's theme_filter_tips()
    'filter_tips' => array(
      'function' => 'ideal_filter_tips',
      'arguments' => array('tips' => NULL, 'long' => FALSE, 'extra' => ''),
      'file' => 'ideal.theme.inc',
    ),
    //Override filter.module's theme_filter_tips()
    'filter_tips_more_info' => array(
      'function' => 'ideal_filter_tips_more_info',
      'file' => 'ideal.theme.inc',
    ),
  );
}

/**
 * Implementation of hook_form_alter().
 */
function ideal_form_alter(&$form, $form_state, $form_id) {
  global $user;
  switch ($form_id) {
    case 'idea_node_form':
      if (!(in_array('administrator', array_values($user->roles)))) {
        $form['field_in_action']['#access']                   = FALSE;
        $form['path']['#access']                              = FALSE;
        $form['comment_settings']['#access']                  = FALSE;
        $form['menu']['#access']                              = FALSE;
        $form['revision_information']['revision']['#access']  = FALSE;
        $form['author']['#access']                            = FALSE;
        $form['options']['#access']                           = FALSE;
        $form['body_field']['teaser_include']['#access']      = FALSE;
      }
      break;
  }
}

/**
 * Implementation of hook_ctools_plugin_dierctory() to let the system
 * know we implement widget plugins.
 */
function ideal_ctools_plugin_directory($module, $plugin) {
  if ($module == 'vud') {
    return $plugin;
  }
}
